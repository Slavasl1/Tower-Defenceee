//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _GameLogic_.Common.DetectionAreaComponent detectionArea { get { return (_GameLogic_.Common.DetectionAreaComponent)GetComponent(GameComponentsLookup.DetectionArea); } }
    public bool hasDetectionArea { get { return HasComponent(GameComponentsLookup.DetectionArea); } }

    public void AddDetectionArea(UnityEngine.Bounds newValue) {
        var index = GameComponentsLookup.DetectionArea;
        var component = (_GameLogic_.Common.DetectionAreaComponent)CreateComponent(index, typeof(_GameLogic_.Common.DetectionAreaComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDetectionArea(UnityEngine.Bounds newValue) {
        var index = GameComponentsLookup.DetectionArea;
        var component = (_GameLogic_.Common.DetectionAreaComponent)CreateComponent(index, typeof(_GameLogic_.Common.DetectionAreaComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDetectionArea() {
        RemoveComponent(GameComponentsLookup.DetectionArea);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDetectionArea;

    public static Entitas.IMatcher<GameEntity> DetectionArea {
        get {
            if (_matcherDetectionArea == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DetectionArea);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDetectionArea = matcher;
            }

            return _matcherDetectionArea;
        }
    }
}
