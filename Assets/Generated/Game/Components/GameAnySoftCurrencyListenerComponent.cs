//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnySoftCurrencyListenerComponent anySoftCurrencyListener { get { return (AnySoftCurrencyListenerComponent)GetComponent(GameComponentsLookup.AnySoftCurrencyListener); } }
    public bool hasAnySoftCurrencyListener { get { return HasComponent(GameComponentsLookup.AnySoftCurrencyListener); } }

    public void AddAnySoftCurrencyListener(System.Collections.Generic.List<IAnySoftCurrencyListener> newValue) {
        var index = GameComponentsLookup.AnySoftCurrencyListener;
        var component = (AnySoftCurrencyListenerComponent)CreateComponent(index, typeof(AnySoftCurrencyListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnySoftCurrencyListener(System.Collections.Generic.List<IAnySoftCurrencyListener> newValue) {
        var index = GameComponentsLookup.AnySoftCurrencyListener;
        var component = (AnySoftCurrencyListenerComponent)CreateComponent(index, typeof(AnySoftCurrencyListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnySoftCurrencyListener() {
        RemoveComponent(GameComponentsLookup.AnySoftCurrencyListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnySoftCurrencyListener;

    public static Entitas.IMatcher<GameEntity> AnySoftCurrencyListener {
        get {
            if (_matcherAnySoftCurrencyListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnySoftCurrencyListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnySoftCurrencyListener = matcher;
            }

            return _matcherAnySoftCurrencyListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnySoftCurrencyListener(IAnySoftCurrencyListener value) {
        var listeners = hasAnySoftCurrencyListener
            ? anySoftCurrencyListener.value
            : new System.Collections.Generic.List<IAnySoftCurrencyListener>();
        listeners.Add(value);
        ReplaceAnySoftCurrencyListener(listeners);
    }

    public void RemoveAnySoftCurrencyListener(IAnySoftCurrencyListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anySoftCurrencyListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnySoftCurrencyListener();
        } else {
            ReplaceAnySoftCurrencyListener(listeners);
        }
    }
}
